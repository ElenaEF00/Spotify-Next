import MainLayout from "@/layouts/mainLayout";
import { useRouter } from "next/router";
import { useState, useEffect } from "react";
import { MdOutlineTimer } from "react-icons/md";
import { VscCircleFilled } from "react-icons/vsc";
import Album from "../../components/album";
import Track from "@/components/track";
import Head from "next/head";
import styles from "../../styles/Artist.module.scss";

export default function Artist() {
  const router = useRouter();
  const [artistName, setArtistName] = useState({});
  const [artistAlbums, setArtistAlbums] = useState({});
  const [artistTopTracks, setArtistTopTracks] = useState([]);

  useEffect(() => {
    const token = window.localStorage.getItem("token");
    fetch(`https://api.spotify.com/v1/artists/${router.query.name}`, {
      method: "GET",
      headers: {
        Authorization: `Bearer ${token}`,
      },
    })
      .then((res) => res.json())
      .then((data) => setArtistName(data));
  }, [router.query.name]);

  useEffect(() => {
    const token = window.localStorage.getItem("token");
    fetch(
      `https://api.spotify.com/v1/artists/${router.query.name}/albums?limit=8`,
      {
        method: "GET",
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    )
      .then((res) => res.json())
      .then((data) => setArtistAlbums(data));
  }, [router.query.name]);

  useEffect(() => {
    const token = window.localStorage.getItem("token");
    fetch(
      `https://api.spotify.com/v1/artists/${router.query.name}/top-tracks?market=IT`,
      {
        method: "GET",
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    )
      .then((res) => res.json())
      .then((data) => setArtistTopTracks(data.tracks));
  }, [router.query.name]);

  return (
    <MainLayout>
      <>
        <Head>
          <title>Spotify Next</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link
            rel="icon"
            href="https://img.icons8.com/ios-filled/50/1DB954/spotify.png"
            alt="spotify"
          />
        </Head>
        {Object.keys(artistName).length > 1 ? (
          <>
            <div className={styles.Artist}>
              <div className={styles.photo}>
                {artistName.images.length > 1 ? (
                  <img
                    src={artistName.images[1].url}
                    alt=""
                    className={styles.pic}
                  />
                ) : (
                  <img
                    src={artistName.images[0].url}
                    alt=""
                    className={styles.pic}
                  />
                )}
                <h2 className={styles.title}>{artistName.name}</h2>
              </div>
              <div className={styles.Info}>
                <VscCircleFilled className={styles.bullet} />
                <p>{artistName.followers.total} followers</p>
                <VscCircleFilled className={styles.bullet} />
                <p>{artistName.genres.map((genre) => genre).join(", ")}</p>
              </div>
            </div>
          </>
        ) : (
          <p>Loading...</p>
        )}

        <h3 className={styles.title}>Artist's Albums</h3>
        <div className={styles.artist_albums}>
          {Object.keys(artistAlbums).length > 0 ? (
            artistAlbums.items.map((album, key) => (
              <Album albumData={album} key={key} id={key} />
            ))
          ) : (
            <h1>Loading...</h1>
          )}
        </div>

        <h3 className={styles.title}>Artist&apos;s Top Tracks</h3>

        <div className={styles.listIntro}>
          <p>#</p>
          <p>Title</p>
          <MdOutlineTimer />
        </div>

        <div className={styles.artist_top_tracks}>
          {Object.keys(artistTopTracks).length > 0 ? (
            artistTopTracks.map((album, key) => (
              <Track trackData={album} key={key} id={key} />
            ))
          ) : (
            <h1>Loading...</h1>
          )}
        </div>
      </>
    </MainLayout>
  );
}
